{"version":3,"sources":["Video.jsx","App.js","index.js"],"names":["Video","props","lasturl","url","suburl","width","height","controls","playing","light","config","file","tracks","kind","src","default","srcLang","label","App","useState","vUrl","setVUrl","setFile","theme","setTheme","setLastUrl","binary","useEffect","axios","get","then","res","console","log","catch","err","handleSubs","a","onSuccess","formData","FormData","append","post","headers","data","statusText","message","success","notification","error","placement","btnName","setBtnName","style","minHeight","className","marginTop","marginBottom","name","Item","rules","required","type","placeholder","onChange","e","preventDefault","target","value","progress","customRequest","icon","UploadOutlined","htmlType","onClick","push","blob","Blob","URL","createObjectURL","Vurl","document","body","color","backgroundColor","rootElement","getElementById","ThemeProvider","styleClass","AppTheme","setAppTheme","setAppThemeProp","ReactDOM","render"],"mappings":"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","file":"static/js/main.e40e1056.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Video = (props) => {\r\n  const lasturl = props.url;\r\n  const suburl = props.suburl;\r\n  return (\r\n    <>\r\n      <ReactPlayer\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        url={lasturl}\r\n        controls\r\n        playing\r\n        light=\"https://www.droidword.com/wp-content/uploads/2017/09/Best-Android-Video-Players-1024x640.png\"\r\n        config={{\r\n          file: {\r\n            tracks: [\r\n              {\r\n                kind: \"subtitles\",\r\n                src: `${suburl}`,\r\n                default: true,\r\n                srcLang: \"en\",\r\n                label: \"English\"\r\n              }\r\n            ]\r\n          }\r\n        }}\r\n      >\r\n        <track />\r\n      </ReactPlayer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Video from \"./Video\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  List,\r\n  Menu,\r\n  message,\r\n  notification,\r\n  Upload\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport Sider from \"antd/lib/layout/Sider\";\r\n\r\nexport default function App(props) {\r\n  const [vUrl, setVUrl] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [lasturl, setLastUrl] = useState(\"\");\r\n  let suburl;\r\n  let binary = [];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    binary.push(file);\r\n    let blob = new Blob(binary, { type: \"text/vtt\" });\r\n    suburl = URL.createObjectURL(blob);\r\n    let url = {\r\n      Vurl: vUrl,\r\n      suburl: suburl\r\n    };\r\n\r\n    setLastUrl(() => {\r\n      return url;\r\n    });\r\n  };\r\n\r\n  const test = () => {\r\n    axios\r\n      .get(\"https://srt2webvtt.herokuapp.com/\")\r\n      .then((res) => {\r\n        console.log(\"everything is fine\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"API is not working!!!\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    test();\r\n  }, []);\r\n\r\n  const handleSubs = async ({ file, onSuccess }) => {\r\n    const formData = new FormData();\r\n    formData.append(\"Srt\", file);\r\n    const res = await axios.post(\r\n      \"https://srt2webvtt.herokuapp.com/uploadSrt\",\r\n      formData,\r\n      { headers: { \"content-type\": \"multipart/form-data\" } }\r\n    );\r\n\r\n    if (res.data) {\r\n      setFile(res.data);\r\n      onSuccess(res.statusText);\r\n      message.success(\"Srt Upadload Sucessfully\");\r\n    } else {\r\n      notification.error({\r\n        placement: \"topLeft\",\r\n        message: \"Problem with subs\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const [btnName, setBtnName] = useState(\"Dark Mode\");\r\n\r\n  const handleTheme = () => {\r\n    if (theme === \"dark\") {\r\n      setTheme(\"light\");\r\n      setBtnName(\"Dark Mode\");\r\n      document.body.style.color = \"#001a36\";\r\n      document.body.style.backgroundColor = \"white\";\r\n    } else {\r\n      setTheme(\"dark\");\r\n      setBtnName(\"Light Mode\");\r\n      document.body.style.backgroundColor = \"#001a36\";\r\n      document.body.style.color = \"white\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Sider\r\n          theme={theme}\r\n          style={{ minHeight: \"75vh\" }}\r\n          className=\"site-layout-background\"\r\n        >\r\n          <Menu theme={theme} style={{ marginTop: \"2%\", marginBottom: \"2%\" }}>\r\n            <Form name=\"videoForm\" className=\"VideoForm\">\r\n              <Form.Item\r\n                name=\"videoURL\"\r\n                rules={[{ required: true, message: \"Please enter video url\" }]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter video url\"\r\n                  onChange={(e) => {\r\n                    e.preventDefault();\r\n                    setVUrl(e.target.value);\r\n                  }}\r\n                  value={vUrl}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"subtitle\">\r\n                <Upload\r\n                  progress={(e) => {\r\n                    console.log(e);\r\n                  }}\r\n                  customRequest={handleSubs}\r\n                >\r\n                  <Button icon={<UploadOutlined />}>Select Subtitles</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\r\n                  Play\r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button onClick={handleTheme} name=\"darkMode\">\r\n                  {btnName}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Menu>\r\n        </Sider>\r\n\r\n        <Layout className=\"site-layout\">\r\n          <Content>\r\n            <Video url={lasturl.Vurl} suburl={lasturl.suburl} />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nconst ThemeProvider = () => {\r\n  const [AppTheme, setAppTheme] = useState(\"light\");\r\n  let styleClass;\r\n\r\n  console.log(AppTheme);\r\n\r\n  if (AppTheme === \"light\") {\r\n    styleClass = \"light\";\r\n  } else {\r\n    styleClass = \"dark\";\r\n  }\r\n\r\n  return (\r\n    <div className={styleClass}>\r\n      <App theme={AppTheme} setAppThemeProp={setAppTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ThemeProvider />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}